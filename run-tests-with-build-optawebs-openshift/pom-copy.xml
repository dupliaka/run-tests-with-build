<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <parent>
    <artifactId>run-tests-with-build</artifactId>
    <groupId>org.kie</groupId>
    <version>1.0-SNAPSHOT</version>
  </parent>
  <modelVersion>4.0.0</modelVersion>

  <groupId>org.kie</groupId>
  <artifactId>run-tests-with-build-optawebs-openshift</artifactId>
  <packaging>pom</packaging>

  <properties>
    <reference-implementation.project.zip>Defined-in-project-profile</reference-implementation.project.zip>
    <reference-implementation.project.unpacked>Defined-in-project-profile</reference-implementation.project.unpacked>
    <kogito.decision-services-quickstarts.latest.url>Defined-in-product-related-profiles</kogito.decision-services-quickstarts.latest.url>
    <maven-arg-line>Defined-in-project-profile</maven-arg-line>
    <!-- Either empty or defined in an environment-specific profile -->
    <maven-arg-line.upstream-profiles></maven-arg-line.upstream-profiles>
    <openshift.api-url>https://api.production.rhba.openshift-aws.rhocf-dev.com:6443</openshift.api-url>
    <openshift.user>admin</openshift.user>
    <openshift.password>admin</openshift.password>
    <!-- Product to test with - RHDM/RHPAM -->
    <rh.product></rh.product>
    <test-script>Defined-in-project-profile</test-script>
    <unpacked.sources.directory>${project.build.directory}</unpacked.sources.directory>
    <vrp.osm-test-data-url>https://github.com/kiegroup/optaweb-vehicle-routing/raw/master/optaweb-vehicle-routing-standalone/data/openstreetmap/planet_12.032%2C53.0171_12.1024%2C53.0491.osm.pbf</vrp.osm-test-data-url>
    <!--
      Used only for running Cypress tests when deployed on OpenShift. On-premise testing takes version defined
      in an upstream project.
    -->
    <version.cypress.docker>3.6.0</version.cypress.docker>
  </properties>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>com.googlecode.maven-download-plugin</groupId>
          <artifactId>download-maven-plugin</artifactId>
          <executions>
            <execution>
              <id>download-reference-implementation</id>
              <phase>pre-integration-test</phase>
              <goals>
                <goal>wget</goal>
              </goals>
              <configuration>
                <url>${kogito.decision-services-quickstarts.latest.url}</url>
                <unpack>true</unpack>
                <outputDirectory>${project.build.directory}</outputDirectory>
              </configuration>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-antrun-plugin</artifactId>
          <executions>
            <execution>
              <id>unzip-project</id>
              <phase>pre-integration-test</phase>
              <goals>
                <goal>run</goal>
              </goals>
              <configuration>
                <target>
                  <unzip src="${project.build.directory}/${reference-implementation.project.zip}" dest="${unpacked.sources.directory}"/>
                </target>
              </configuration>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-invoker-plugin</artifactId>
          <!-- Overrides the version from parent project in order not to have to work around
               https://issues.apache.org/jira/browse/MINVOKER-224 -->
          <version>3.1.0</version>
          <executions>
            <execution>
              <id>run-tests</id>
              <goals>
                <goal>integration-test</goal>
              </goals>
              <configuration combine.children="append">
                <pom>${reference-implementation.project.unpacked}/pom.xml</pom>
                <streamLogs>true</streamLogs>
                <mergeUserSettings>true</mergeUserSettings>
                <mavenOpts>-Xms256m -Xmx2g</mavenOpts>
                <settingsFile>${maven.multiModuleProjectDirectory}/.mvn/settings.xml</settingsFile>
                <goals>
                  <goal>${maven-arg-line}</goal>
                </goals>
              </configuration>
            </execution>
          </executions>
        </plugin>
      </plugins>
    </pluginManagement>
    <plugins>
      <plugin>
        <groupId>com.googlecode.maven-download-plugin</groupId>
        <artifactId>download-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-invoker-plugin</artifactId>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>employee-rostering</id>
      <properties>
        <reference-implementation.project.name>optaweb-employee-rostering-distribution-${droolsjbpm.version}</reference-implementation.project.name>
        <reference-implementation.project.zip>kogito-1.5.0-decision-services-quickstarts</reference-implementation.project.zip>
        <reference-implementation.project.zip>${rh.product}-${binary.patch.version}-optaweb-employee-rostering.zip</reference-implementation.project.zip>
        <reference-implementation.project.unpacked>${unpacked.sources.directory}/${reference-implementation.project.name}/sources</reference-implementation.project.unpacked>
        <test-script>test-employee-rostering-openshift.sh</test-script>
      </properties>
      <build>
        <pluginManagement>
          <plugins>
            <plugin>
              <artifactId>exec-maven-plugin</artifactId>
              <groupId>org.codehaus.mojo</groupId>
              <executions>
                <execution>
                  <id>deploy-to-openshift-and-test</id>
                  <phase>integration-test</phase>
                  <goals>
                    <goal>exec</goal>
                  </goals>
                  <configuration>
                    <executable>${project.basedir}/${test-script}</executable>
                    <arguments>
                      <argument>${reference-implementation.project.unpacked}</argument>
                      <argument>${version.cypress.docker}</argument>
                      <argument>${openshift.api-url}</argument>
                      <argument>${openshift.user}</argument>
                      <argument>${openshift.password}</argument>
                    </arguments>
                  </configuration>
                </execution>
              </executions>
            </plugin>
          </plugins>
        </pluginManagement>
      </build>
    </profile>
    <profile>
      <id>vehicle-routing</id>
      <properties>
        <test-script>test-vehicle-routing-openshift.sh</test-script>
      </properties>
      <build>
        <pluginManagement>
          <plugins>
            <plugin>
              <artifactId>exec-maven-plugin</artifactId>
              <groupId>org.codehaus.mojo</groupId>
              <executions>
                <execution>
                  <id>deploy-to-openshift-and-test</id>
                  <phase>integration-test</phase>
                  <goals>
                    <goal>exec</goal>
                  </goals>
                  <configuration>
                    <executable>${project.basedir}/${test-script}</executable>
                    <arguments>
                      <argument>${reference-implementation.project.unpacked}</argument>
                      <argument>${version.cypress.docker}</argument>
                      <argument>${openshift.api-url}</argument>
                      <argument>${openshift.user}</argument>
                      <argument>${openshift.password}</argument>
                      <argument>${vrp.osm-test-data-url}</argument>
                    </arguments>
                  </configuration>
                </execution>
              </executions>
            </plugin>
          </plugins>
        </pluginManagement>
      </build>
    </profile>
    <!-- Integration tests that require containers have to be executed only on Linux -->
    <profile>
      <id>run-on-unix-family-only</id>
      <activation>
        <os>
          <family>unix</family>
        </os>
      </activation>
      <properties>
        <maven-arg-line.upstream-profiles>-Pintegration-tests</maven-arg-line.upstream-profiles>
      </properties>
    </profile>
    <!-- A workaround for a filesystem path limitation on Windows -->
    <profile>
      <id>run-on-windows-family-only</id>
      <activation>
        <os>
          <family>windows</family>
        </os>
      </activation>
      <properties>
        <tmp.directory>c:\tmp</tmp.directory>
        <reference-implementation.project.unpacked>${unpacked.sources.directory}</reference-implementation.project.unpacked>
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-antrun-plugin</artifactId>
            <executions>
              <execution>
                <id>create-temp-directory</id>
                <phase>initialize</phase>
                <goals>
                  <goal>run</goal>
                </goals>
                <configuration>
                  <target>
                    <mkdir dir="${tmp.directory}"/>
                  </target>
                </configuration>
              </execution>
              <execution>
                <id>unzip-project</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>run</goal>
                </goals>
                <configuration>
                  <target>
                    <unzip src="${project.build.directory}/${reference-implementation.project.zip}" dest="${tmp.directory}"/>
                    <move file="${tmp.directory}/${reference-implementation.project.name}/sources" tofile="${reference-implementation.project.unpacked}"/>
                  </target>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <!-- To run tests on premise this profile relies on test setup and execution in optaweb repositories -->
      <id>on-premise</id>
      <properties>
        <maven-arg-line>clean install -fae -B ${maven-arg-line.upstream-profiles} -Denforcer.skip -Drevapi.skip -Dcontainer.runtime=podman</maven-arg-line>
      </properties>
    </profile>
    <profile>
      <id>openshift</id>
      <properties>
        <maven-arg-line>clean install -B -Denforcer.skip -Drevapi.skip -DskipTests</maven-arg-line>
      </properties>
      <build>
        <plugins>
          <plugin>
            <artifactId>exec-maven-plugin</artifactId>
            <groupId>org.codehaus.mojo</groupId>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
